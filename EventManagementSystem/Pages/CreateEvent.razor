@page "/create-event"
@layout MainLayout
@inject EventService EventService
@inject NavigationManager Navigation

<div class="container mt-5 p-5" style="background: linear-gradient(135deg, #1d3557, #457b9d); border-radius: 12px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);">
    <h3 class="text-center text-white mb-4">Create New Event</h3>

    <EditForm Model="newEvent" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-warning" />

        <div class="row">
            <!-- Event Name -->
            <div class="col-lg-6 col-md-12 mb-4">
                <label for="eventName" class="form-label text-light">Event Name</label>
                <InputText id="eventName" class="form-control form-control-lg shadow-sm" @bind-Value="newEvent.Name" required />
            </div>

            <!-- Event Date -->
            <div class="col-lg-6 col-md-12 mb-4">
                <label for="eventDate" class="form-label text-light">Event Date</label>
                <InputDate id="eventDate" class="form-control form-control-lg shadow-sm" @bind-Value="newEvent.Date" required />
            </div>
        </div>

        <div class="row">
            <!-- Event Time -->
            <div class="col-lg-6 col-md-12 mb-4">
                <label for="eventTime" class="form-label text-light">Event Time</label>
                <InputText id="eventTime" class="form-control form-control-lg shadow-sm" @bind-Value="newEvent.Time" type="time" required />
            </div>

            <!-- Event Description -->
            <div class="col-lg-6 col-md-12 mb-4">
                <label for="eventDescription" class="form-label text-light">Event Description</label>
                <InputTextArea id="eventDescription" class="form-control form-control-lg shadow-sm" @bind-Value="newEvent.Description" rows="4" required />
            </div>
        </div>

        <!-- Event Image -->
        <div class="row">
            <div class="col-lg-6 col-md-12 mb-4">
                <label for="eventImage" class="form-label text-light">Event Image</label>
                <InputFile id="eventImage" class="form-control form-control-lg shadow-sm" OnChange="HandleImageChange" />
            </div>
        </div>

        <!-- Create Event Button -->
        <div class="text-center">
            <button type="submit" class="btn btn-success btn-lg w-100 shadow-sm mt-4">Create Event</button>
        </div>
    </EditForm>
</div>

@code {
    private Event newEvent = new Event();
    private string? imageBase64;

    // Method to handle image selection
    private async Task HandleImageChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);

        // Convert the image to base64
        imageBase64 = $"data:{file.ContentType};base64,{Convert.ToBase64String(buffer)}";

        // Set the image base64 data to the Event object
        newEvent.ImageUrl = imageBase64; // Storing the image as base64 in the event model
    }

    private async Task HandleValidSubmit()
    {
        Console.WriteLine($"Event Data: {newEvent.Name}, {newEvent.Date}, {newEvent.Time}, {newEvent.Description}, {newEvent.ImageUrl}");
        await EventService.CreateEvent(newEvent);
        Navigation.NavigateTo("/events");
    }

}
